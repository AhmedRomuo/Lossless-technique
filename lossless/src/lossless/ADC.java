/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lossless;

import javax.swing.JOptionPane;

/**
 *
 * @author ahmed
 */
public class ADC extends javax.swing.JFrame {

    /**
     * Creates new form Quntization
     */
    public ADC() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_num_sample = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_bit_rate = new javax.swing.JTextField();
        btn_bitError = new javax.swing.JButton();
        btn_insertSample = new javax.swing.JButton();
        lbl_errorSequance = new javax.swing.JLabel();
        lbl_error = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Num of Sample : ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Bit Rate : ");

        btn_bitError.setText("Calculate bit error");
        btn_bitError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bitErrorActionPerformed(evt);
            }
        });

        btn_insertSample.setText("Insert Sample");
        btn_insertSample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertSampleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_bitError)
                            .addComponent(txt_bit_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_num_sample, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_errorSequance))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_error)))
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(btn_insertSample)
                    .addContainerGap(218, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_num_sample, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_bit_rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btn_bitError)
                .addGap(18, 18, 18)
                .addComponent(lbl_errorSequance)
                .addGap(32, 32, 32)
                .addComponent(lbl_error)
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(110, 110, 110)
                    .addComponent(btn_insertSample)
                    .addContainerGap(105, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_insertSampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertSampleActionPerformed
        if(this.txt_num_sample.getText().equals(""))
            JOptionPane.showMessageDialog(null, "Number cannet be empty", "Alert", JOptionPane.INFORMATION_MESSAGE);
        else if(this.txt_bit_rate.getText().equals(""))
            JOptionPane.showMessageDialog(null, "bit rate cannet be empty", "Alert", JOptionPane.INFORMATION_MESSAGE);
        else{
            this.samples = new float[Integer.parseInt(this.txt_num_sample.getText())];
            for (int i = 0; i < samples.length; i++)
                this.samples[i] = Float.parseFloat(JOptionPane.showInputDialog(null, "Enter sample(" + (i+1) + ")", "input", JOptionPane.INFORMATION_MESSAGE));
            
            
        }
    }//GEN-LAST:event_btn_insertSampleActionPerformed

    private void btn_bitErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bitErrorActionPerformed
        int num_level = (int) Math.pow(2, Integer.parseInt(this.txt_bit_rate.getText()));
        //System.out.println(num_level);
        float range,max,min,temp = samples[0];
        
        // calculate the max value
        for (int i = 1; i < samples.length; i++) {
            temp = Math.max(this.samples[i], temp);
        }
        max = temp;
        
        //calculate the min value
        temp = samples[0];
        for (int i = 1; i <samples.length; i++) {
            temp = Math.min(this.samples[i], temp);
        }
        min = temp;
        
        //calclate the delta
        range = max-min;
        System.out.println(max + " , " + min);
        
        float delta = range/num_level;
        // reposet and bit stream
        this.which_level(min, max, delta, num_level);
        this.error_calculate();
        
        String bit_stream = "Bit Stream : ";
        for (int i = 0; i < this.bit_stream.length; i++) {
            bit_stream += this.bit_stream[i] + " ";
        }
        
        this.lbl_errorSequance.setText(bit_stream);
        this.lbl_error.setText("Error : " + this.error);
    }//GEN-LAST:event_btn_bitErrorActionPerformed

    //calculate error
    public void error_calculate(){
        for (int i = 0; i < this.reposet_levels_samples.length; i++){
            System.out.println(this.samples[i] - this.avarage[i]);
            if ((this.samples[i] - this.avarage[i]) < 0)
                this.error += (this.samples[i] - this.avarage[i])* (float) -1;
            else 
                this.error += this.samples[i] - this.avarage[i]; 
        }
        
    }
    
    public void which_level(float low,float high, float delta, int num_level){
        this.reposet_levels_samples = new int[Integer.parseInt(this.txt_num_sample.getText())];
        this.avarage = new float[Integer.parseInt(this.txt_num_sample.getText())];
        this.bit_stream = new String[Integer.parseInt(this.txt_num_sample.getText())];
        
        //calculate which level and insert in the repost of array
        for (int i = 0; i < samples.length; i++) {
            float h, l = low;
            //System.out.println(this.samples[i]);
            for (int j = 0; j < num_level; j++) {
                h = l + delta;
                if(this.samples[i] == high){
                    h = high - delta;
                    this.reposet_levels_samples[i] = num_level-1;
                    this.avarage[i] = (high + h)/(float)2;
                }else if(samples[i] < h && samples[i] >= l){
                    //System.out.println(l + "  " + this.samples[i]);
                    this.reposet_levels_samples[i] = j;
                    this.avarage[i] = (l + h)/(float) 2;
                }
                l += delta;
            }
        }
        
        //convert to binary
        for (int i = 0; i < this.bit_stream.length; i++) {
            this.bit_stream[i] = "";
            System.out.println(this.reposet_levels_samples[i]);
        }
        
        for (int i = 0; i < reposet_levels_samples.length; i++) {
            this.bit_stream[i] = Integer.toBinaryString(this.reposet_levels_samples[i]);
        }  
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADC().setVisible(true);
            }
        });
    }
    
    public float[]samples;
    public int[]reposet_levels_samples;
    public float[]avarage;
    public String [] bit_stream;
    public float error = 0;
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_bitError;
    private javax.swing.JButton btn_insertSample;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbl_error;
    private javax.swing.JLabel lbl_errorSequance;
    private javax.swing.JTextField txt_bit_rate;
    private javax.swing.JTextField txt_num_sample;
    // End of variables declaration//GEN-END:variables
}
